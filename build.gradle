buildscript {
    ext.kotlin_version = '1.3.21'
    ext.junitVersion = '5.4.0'
    ext.junitPlatformVersion = '1.0.0'

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.0.0"
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.0.0'
    }
}

apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.johnrengelman.shadow'


group = 'uk.co.jpereira'
version = '0.1.1'

description = """SParQ - Streamlined Particle Quantification - ImageJ Plugin"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

configurations.all {
}

repositories {

    maven { url "http://maven.imagej.net/content/groups/public" }
    maven { url "http://repo.maven.apache.org/maven2" }
    mavenCentral()
}


compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        javaParameters = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        javaParameters = true
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    kapt 'net.imagej:imagej:2.0.0-rc-71'
    compile 'net.imagej:imagej:2.0.0-rc-71'
    compile(group: 'ome', name: 'bio-formats_plugins', version: '6.0.0-m2')

    testCompile "org.assertj:assertj-core:3.11.1"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testRuntime "org.junit.platform:junit-platform-console:$junitPlatformVersion"
}

test {
    useJUnitPlatform()
}

shadowJar {
    configurations = [project.configurations.compile]
    dependencies {
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib"))
    }
}